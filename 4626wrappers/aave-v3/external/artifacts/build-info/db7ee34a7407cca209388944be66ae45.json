{
	"id": "db7ee34a7407cca209388944be66ae45",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.16",
	"solcLongVersion": "0.8.16+commit.07a7930e",
	"input": {
		"language": "Solidity",
		"sources": {
			"aave-v3/external/IRewardsController.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.4;\n\n/**\n * @title IRewardsController\n * @author Aave\n * @notice Defines the basic interface for a Rewards Controller.\n */\ninterface IRewardsController {\n    /**\n     * @dev Claims all rewards for a user to the desired address, on all the assets of the pool, accumulating the pending rewards\n     * @param assets The list of assets to check eligible distributions before claiming rewards\n     * @param to The address that will be receiving the rewards\n     * @return rewardsList List of addresses of the reward tokens\n     * @return claimedAmounts List that contains the claimed amount per reward, following same order as \"rewardList\"\n     *\n     */\n    function claimAllRewards(address[] calldata assets, address to)\n        external\n        returns (address[] memory rewardsList, uint256[] memory claimedAmounts);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"aave-v3/external/IRewardsController.sol": {
				"IRewardsController": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "assets",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "claimAllRewards",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "rewardsList",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "claimedAmounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aave",
						"kind": "dev",
						"methods": {
							"claimAllRewards(address[],address)": {
								"details": "Claims all rewards for a user to the desired address, on all the assets of the pool, accumulating the pending rewards",
								"params": {
									"assets": "The list of assets to check eligible distributions before claiming rewards",
									"to": "The address that will be receiving the rewards"
								},
								"returns": {
									"claimedAmounts": "List that contains the claimed amount per reward, following same order as \"rewardList\"",
									"rewardsList": "List of addresses of the reward tokens"
								}
							}
						},
						"title": "IRewardsController",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimAllRewards(address[],address)": "bb492bf5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claimAllRewards\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"rewardsList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"claimedAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"kind\":\"dev\",\"methods\":{\"claimAllRewards(address[],address)\":{\"details\":\"Claims all rewards for a user to the desired address, on all the assets of the pool, accumulating the pending rewards\",\"params\":{\"assets\":\"The list of assets to check eligible distributions before claiming rewards\",\"to\":\"The address that will be receiving the rewards\"},\"returns\":{\"claimedAmounts\":\"List that contains the claimed amount per reward, following same order as \\\"rewardList\\\"\",\"rewardsList\":\"List of addresses of the reward tokens\"}}},\"title\":\"IRewardsController\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Defines the basic interface for a Rewards Controller.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"aave-v3/external/IRewardsController.sol\":\"IRewardsController\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"aave-v3/external/IRewardsController.sol\":{\"keccak256\":\"0x99fdeffee28a1f84de7010959f96a772b9a6512c6446950bb714b521e8c536df\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://9e6af211ae3b0ddce085b87abf49b7c22b2f650490cbf3f56b566ad9c086dadb\",\"dweb:/ipfs/QmRDCG82uJKDXSAGCXeQLxj96MioKDCLTLVLurjNJQai4C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Defines the basic interface for a Rewards Controller.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"aave-v3/external/IRewardsController.sol": {
				"ast": {
					"absolutePath": "aave-v3/external/IRewardsController.sol",
					"exportedSymbols": {
						"IRewardsController": [
							18
						]
					},
					"id": 19,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRewardsController",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "62:117:0",
								"text": " @title IRewardsController\n @author Aave\n @notice Defines the basic interface for a Rewards Controller."
							},
							"fullyImplemented": false,
							"id": 18,
							"linearizedBaseContracts": [
								18
							],
							"name": "IRewardsController",
							"nameLocation": "190:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "215:491:0",
										"text": " @dev Claims all rewards for a user to the desired address, on all the assets of the pool, accumulating the pending rewards\n @param assets The list of assets to check eligible distributions before claiming rewards\n @param to The address that will be receiving the rewards\n @return rewardsList List of addresses of the reward tokens\n @return claimedAmounts List that contains the claimed amount per reward, following same order as \"rewardList\""
									},
									"functionSelector": "bb492bf5",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimAllRewards",
									"nameLocation": "720:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "755:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "736:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 4,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "736:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 5,
													"nodeType": "ArrayTypeName",
													"src": "736:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "771:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "763:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:39:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "rewardsList",
												"nameLocation": "826:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "809:28:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 10,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "809:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 11,
													"nodeType": "ArrayTypeName",
													"src": "809:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "claimedAmounts",
												"nameLocation": "856:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "839:31:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 13,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "839:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 14,
													"nodeType": "ArrayTypeName",
													"src": "839:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:63:0"
									},
									"scope": 18,
									"src": "711:161:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 19,
							"src": "180:694:0",
							"usedErrors": []
						}
					],
					"src": "37:838:0"
				},
				"id": 0
			}
		}
	}
}